{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImageIndex","setCurrentImageIndex","maxImages","length","isDisabledPrev","isDisabledNext","className","style","width","transition","map","image","index","transform","src","alt","type","onClick","App","setItemWidth","setFrameSize","setStep","setAnimationDuration","setInfinite","htmlFor","id","min","max","onChange","event","target","value","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14fc4900.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n\n  const maxImages = images.length - frameSize;\n  const isDisabledPrev = currentImageIndex === 0 && !infinite;\n  const isDisabledNext = currentImageIndex === maxImages && !infinite;\n\n  function movePrev() {\n    const index = currentImageIndex - step <= 0\n      ? 0\n      : currentImageIndex - step;\n\n    const infiniteIndex = currentImageIndex === 0 && infinite\n      ? maxImages\n      : index;\n\n    setCurrentImageIndex(infiniteIndex);\n  }\n\n  const moveNext = () => {\n    const index = currentImageIndex + step >= maxImages\n      ? maxImages\n      : currentImageIndex + step;\n\n    const infiniteIndex = currentImageIndex === maxImages && infinite\n      ? 0\n      : index;\n\n    setCurrentImageIndex(infiniteIndex);\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `${animationDuration}ms`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            key={image}\n            style={{\n              width: frameSize * itemWidth,\n              transform: `translateX(${-(currentImageIndex * itemWidth)}px)`,\n              transition: `transform ${animationDuration}ms ease 0s`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`${index + 1}`}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__controls\">\n        <button\n          type=\"button\"\n          className={\n            isDisabledPrev\n              ? 'Carousel__button Carousel__button--disabled'\n              : 'Carousel__button Carousel__button--active'\n          }\n          onClick={movePrev}\n        >\n          &larr;\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className={\n            isDisabledNext\n              ? 'Carousel__button Carousel__button--disabled'\n              : 'Carousel__button Carousel__button--active'\n          }\n          onClick={moveNext}\n        >\n          &rarr;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App: React.FC = () => {\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n      <fieldset className=\"App__settings\">\n        <legend>Settings</legend>\n        <label htmlFor=\"itemId\" className=\"App__label\">\n          {'Item width: '}\n          <input\n            type=\"number\"\n            id=\"itemId\"\n            min={30}\n            max={260}\n            step={10}\n            onChange={(event) => {\n              setItemWidth(+event.target.value);\n            }}\n            value={itemWidth}\n          />\n        </label>\n\n        <label htmlFor=\"frameId\" className=\"App__label\">\n          {'Frame size: '}\n          <input\n            type=\"number\"\n            id=\"frameId\"\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={(event) => {\n              setFrameSize(+event.target.value);\n            }}\n            value={frameSize}\n          />\n        </label>\n\n        <label htmlFor=\"stepId\" className=\"App__label\">\n          {'Step: '}\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            min={3}\n            max={images.length}\n            step={1}\n            onChange={(event) => {\n              setStep(+event.target.value);\n            }}\n            value={step}\n          />\n        </label>\n        <label htmlFor=\"animationId\" className=\"App__label\">\n          {'Animation duration: '}\n          <input\n            type=\"number\"\n            id=\"animationId\"\n            min=\"100\"\n            max=\"5000\"\n            step={100}\n            onChange={(event) => {\n              setAnimationDuration(+event.target.value);\n            }}\n            value={animationDuration}\n          />\n        </label>\n\n        <label htmlFor=\"infinite\" className=\"App__label\">\n          {'Infinite: '}\n          <input\n            type=\"checkbox\"\n            onChange={() => setInfinite(!infinite)}\n            checked={infinite}\n          />\n        </label>\n      </fieldset>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}